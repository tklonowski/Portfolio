@{
    ViewBag.Title = "About";
}

<h1>About Me</h1>
<p>I am a 25 year old Software Engineer who lives in the Buffalo area. For being young in the industry, I thankfully have had the privilege to work for both small and large companies in the private and publics sectors. My current passion is .NET development in C#, specifically MVC. I haven’t always been a .NET developer though.
<p>My first real exposure to programming was in college. I went to Buffalo State College in order to pursue my degree in Computer Information Systems. I learned basic C++ development with an IDE called Bloodshed Dev. It was a good first language, as it taught a lot of the fundamentals of programming, but it was limiting to what I wanted to do. I wanted to work on programs with a robust UI.
<p>I ultimately switched colleges and attended University at Buffalo (UB). My degree was switched to Computer Science, which ultimately meant a greater emphasis on theoretical computing. I learned the language Java at UB, which at the time seemed great to me. I was introduced to the IDE Eclipse, and was instantly in love. I had real time compiling errors showing up on my screen, and everything was great. That was until I tried to create a robust UI driven application. At the time, the easiest graphic library to use was the Swing library. It was bulky and buggy at best, and left a lot to be desired.</p>
<p>This is around the time that I worked for the state in my first internship working with Oracle. It was my first real exposure to the professional computing world, and was a great introduction to what the technical field would be like. I got to work with a bunch of great people, and had access to Oracle / Linux training CBTs that kept me busy for the first few weeks. I learned about virtual servers, T-SQL, Relational databases, and basically anything a new ‘DBA in training’ would need to know. It was about this time I fell in love with databases – Almost opposite of what I originally intended.</p>
<p>It didn’t take long before I was given access to multiple Virtual Machines to install SUSE Linux on, as well as Windows Server to try and replicate their current production environments. This was where all of the real learning began. In a matter of two weeks, I had learned about what a Virtual server is, how to manage one through VMWare, how to install an OS on them, how to install Oracle Enterprise on these servers, and then restore production databases to it. I learned how to use the Linux terminal with a quickness, and it was my first real crash course on dealing with constant failure. After creating an Oracle forum account, and barraging the community for information, I managed to get both a Windows and Linux version of their Oracle databases running on Virtual Machines.</p>
<p>The end goal was to get an Application Express (APEX) application up and running, so that they could do development on these servers. This sparked the desire to create a robust UI again, as it was an easy way to hook up data to different graphical components people could interact with. It lead into my side development of a Java program that connected to an Oracle database with an Oracle driver. I created a program that acted as an ‘Easy Database Query Utility’. It allowed you to select columns, set conditionals, and customize a report. It would then show you the report with a built in Swing grid. You could then export this form to a csv, or close it out. I was proud, but alas my internship had come to an end.</p>
<p>I picked up another internship almost immediately after, which turned out to be my first significant technical job. The company started out as One Communications, but then was acquired by Earthlink. It was here that I was introduced to C# and .NET. At the time I was learning about Java and C++ in my core classes, using gedit and g++ compiler or eclipse in college. The first thing I noticed about C# was how similar it was to Java in Syntax, yet how powerful Visual Studio, .NET’s IDE, was. It was a seamless transition from my Java days, but it was a web focus. Previously I had only worked with Console Applications and databases. I was however using Web Forms, which by nature tries to imitate console applications. It attempts to apply a state to your application, which at the time seemed to be the best way. </p>
<p>It was at Earthlink that I learned what it took to really make a web site. I previously had this idea that it was one or two people who just pounded HTML out all day. All of the technologies were almost overwhelming at first. We were using Visual Studio 2005, along with Oracle Enterprise for the database. This is where I learned about web services, specifically SOAP. I learned how to make calls with soapUI, a popular tool used to test web services. Everywhere I looked there was a new topic to study; jQuery, load balancing, IIS, log4net, ASP.NET life cycle, Oracle SPs, CVS for source control, and so much more. The more I learned, the more I loved web development.</p>
<p>As life continues on, my contract with Earthlink had ended. This led me to take a job through UB, another internship, at a local machine shop. This was an interesting job, as it was a little confusing to me what they intended to accomplish with me. I was the only IT savvy person there, with the next in line being the owner. The idea was that I would set up a portal so that people could see the status of their orders in his system, as well as an employee tracking system. For this I opted to continue with .NET and made the project in ASP.NET. I had to use Visual Basic, as per the owner’s instructions, as well as hook into his database he had been maintaining. It was a mess to say the least, but that was what I was there for; to fix it. Every day at work I tasked myself with what I could do to make the owner’s life easier. After the portal was created, I set it up on a windows server machine he bought for me to set up. I set it up with IIS 6, registered the domain, and had it point to his machine. He had his own little self-sustaining server system in his shop.</p>
<p>I soon ran out of work to do within the original contract, but still had time there. That is when I tried to make the owner’s life easier. I scheduled automated backups for his databases to a hard drive we stored in his office. He initially didn’t seem paranoid that he had no backups of his data, but he definitely did once I finished talking to him. For the rest of my contract, I worked on both a graphical tool for him to do manual backups, as well as an automated nightly job that backed up the database to his hard drive.</p>
<p>Once my contract was up, I focused a lot on my own development. I worked on a video tutorial website that at the time was better than I thought. It was a full-fledged video streaming service of videos I had recorded on teaching development. It allowed me to learn the ins and outs of creating a project from start to finish. I won’t go into much detail about this, but it was really one of those projects that opened my eyes to what it takes to really produce a product, versus just thinking about it.</p>
<p>All of this led to my first full time job. It was a small local web shop that focused on ASP.NET Web Forms development as well. It seemed to be a perfect fit at the time. With almost 3 years of contract work under my belt, I felt I had the skills and experience they needed. This was a complete change from my internships and contract positions of before. I quickly became integrated into the company, and started doing production deployments less than 2 months into the job. I became the lead developer on many of their projects that ranged from HIPAA compliant medical websites to government websites used to process payments. I was even involved in writing software for the local foreclosure auction in which I trained state employees to use at the auction. I was on site at the auction the entire event, which was a unique experience for me. It was the first time I ever got to directly communicate with the people that used my software. Surprisingly, with good communication, everyone seemed to love the software we provided and the work we put into making things easy for them. </p>
<p>I spent a total of 10 months at this web shop before being contacted by Earthlink with a great opportunity, but in this time I had learned many valuable lessons. It was the first time I’ve been involved in big team meetings that involved strictly talking about code, and working with mostly other developers. It was a great team building experience, and a great way to meet many good developers. We used anywhere from Visual Studio 2005 to Visual Studio 2010. Although the client sided development left something to be desired, they were really great with standards and databases. I learned a lot about SQL, Stored Procedures, Database Optimization, Query Plans, SQL Profiling, and many advanced database topics. They also hammered the idea of standards. It was a very valuable lesson that I take seriously today, as I have witnessed the effectiveness of it firsthand. </p>
